#! /opt/karton/.karton/bin/python3

# Under construction !
# Inspiration from: https://github.com/CERT-Polska/karton-playground
# Requires https://github.com/elastic/die-python: pip install die-python


from karton.core import Karton, Task, Resource, Config
import subprocess
import die, pathlib


class Die(Karton):
    """
    Runs a DetectItEasy analysis on the incoming sample and sets attribute based on result
    """

    identity = "karton.die"
    filters = [{"type": "sample", "stage": "recognized"}]

    def process(self, task: Task) -> None:
        # Get the incoming sample
        sample_resource = task.get_resource("sample")

        # Log with self.log
        self.log.info(f"Starting DIE analysis on: {sample_resource.name}")

        # Download the resource to a temporary file
        with sample_resource.download_temporary_file() as sample_file:
            self.log.info(f"DB_Path: {die.database_path}")

            output = die.scan_file(sample_resource, die.ScanFlags.RESULT_AS_JSON, str(die.database_path/'db'))

        task = Task(
            {"type": "sample", "stage": "analyzed"},
            payload={"parent": sample_resource, "tags": ["die-analysis"], "sample": Resource(f"die_{sample_resource.name}", output)},
        )

        self.send_task(task)


if __name__ == "__main__":
    Die.main()
