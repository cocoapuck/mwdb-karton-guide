#! /opt/karton/.karton/bin/python3

# Inspiration from: https://github.com/CERT-Polska/karton-playground
# Requires checksec: pip install checksec.py


from karton.core import Karton, Task, Resource
import subprocess


class Checksec(Karton):
    """
    Runs the checksec utility on incoming samples
    """

    identity = "karton.checksec"
    filters = [{"type": "sample", "stage": "recognized"}]

    def process(self, task: Task) -> None:
        # Get the incoming sample
        sample_resource = task.get_resource("sample")

        # Log with self.log
        self.log.info(f"Starting checksec analysis on: {sample_resource.name}")

        # Download the resource to a temporary file
        with sample_resource.download_temporary_file() as sample_file:
            result = subprocess.check_output(["checksec", "-j", sample_file.name])
            
        # Send our results for further processing or reporting
        task = Task(
            {"type": "sample", "stage": "analyzed"},
            payload={"parent": sample_resource, "sample": Resource(f"checksec_{sample_resource.name}", result)},
        )
        self.send_task(task)


if __name__ == "__main__":
    Checksec.main()
